from flask import Flask, render_template, jsonify, request
app = Flask(__name__)
from pymongo import MongoClient           # pymongo를 임포트 하기(패키지 인스톨 먼저 해야겠죠?)
client = MongoClient('localhost', 27017)  # mongoDB는 27017 포트로 돌아갑니다.
db = client.dbsparta                      # 'dbsparta'라는 이름의 db를 만듭니다.

## HTML을 주는 부분
@app.route('/')
def home():
    return render_template('homework.html')

## API 역할을 하는 부분
@app.route('/test', methods=['POST'])
def test_post():
    # rank_give로 클라이언트가 준 rank을 가져오기 & 숫자변환
    rank_receive = request.form['title_give']
    target_movie = db.movies.find_one({'title' : rank_receive})
    target_star = target_movie['star']

    db.movies.update_many({'star' : target_star},{'$set':{'star' : 0}});
    movies = list(db.movies.find({'star' : 0},{'_id' : 0}))

    # 다했으면 성공여부만 보냄
    return jsonify({'result': 'success','info': movies})

@app.route('/test', methods=['GET'])
def test_get():
    # rank_give로 클라이언트가 준 rank을 가져오기
    title_receive = request.args.get('title')

    # rank_receive를 숫자로 만들어주기 (db엔 숫자로 저장되어있으니까!)
    # rank_receive = int(rank_receive)

    # rank의 값이 받은 rank와 일치하는 document 찾기 & _id 값은 출력에서 제외하기
    movie_info = db.movies.find_one({'title':title_receive},{'_id':0})
    target_movie_star = movie_info['star']
    print(target_movie_star)
    l = []
    movies_with_same_stars = list(db.movies.find({'star' : target_movie_star},{'_id':0 }))
    print(movies_with_same_stars)

    for movie in movies_with_same_stars :
        if(target_movie_star == movie['star']) :
            l.append(movie['title'])

    # info라는 키 값으로 영화정보 내려주기
    return jsonify({'titles' : l})

if __name__ == '__main__':
    app.run('0.0.0.0',port=5000,debug=True)